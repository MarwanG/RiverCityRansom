service: Bloc
use : object
types: boolean

observators:
	isEmpty: [Bloc] -> boolean
	isPit: [Bloc] -> boolean
	hasTreasure: [Bloc] -> boolean
	getTreasure: [Bloc] -> object
	 pre getTreasure(b) require hasTreasure(b)
	
Constructors:
	init: boolean * object -> [Bloc]
	
Operators:
	removeTreasure:[Bloc] -> object
	  pre: removeTreasure(b) require hasTreasure(b)

Observations:
	[invariants]
		hasTreasure(b) min= getTreasure(b) != null
		isPit(b) min= !isEmpty(b)
	[init]
		isEmpty(init(true,null)) = true
		isPit(init(true,null)) = false
		hasTreasure(init(true,null)) = false
		hasTreasure(init(true,obj) = true
		getTreasure(init(true,obj) = obj
	[removeTreasure]
		getTreasure(removeTreasure(init(p,obj)) = null
		hasTreasure(removeTreasure(init(p,obj)) = false

		
		
	
	